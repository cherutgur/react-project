{"version":3,"sources":["view/components/Game/Game.js","view/components/Login/Login.jsx","App.js","reportWebVitals.js","index.js"],"names":["sequence","sequenceCopyArray","time1","Game","timeInterval","language","user","setUser","selectedOption","setSelectedOption","loginUser","useState","time","setTime","flashColor","setFlashColor","gameOver","setgameOver","canClick","setCanClick","canStartOver","setCanStartOver","userName","setUserName","highestResult","setHighestResult","useEffect","document","cookie","split","getRandomControler","controlers","Math","floor","random","length","startGame","myTimer","a","clearInterval","currentResult","console","log","color","flashAndPlayAudio","setInterval","clickColor","e","clickedControler","currentTarget","id","expectedClick","shift","setTimeout","timeOut","Promise","resolve","rej","Audio","play","className","onClick","startBtn","Login","fetch","then","response","json","data","type","placeholder","name","required","onChange","target","value","to","style","App","title","routerGame","routerSettings","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5a7e0cf9.chunk.js","sourcesContent":["import React, {useState,useEffect} from 'react';\r\nimport './Game.scss';\r\n\r\nlet sequence = [];\r\nlet sequenceCopyArray= [];\r\nlet time1 = 15;\r\n\r\n\r\nfunction Game({language,user,setUser,selectedOption,setSelectedOption,loginUser}) {\r\n\r\n  const [time, setTime] = useState('--');\r\n  const [flashColor, setFlashColor] = useState('');\r\n  const [gameOver, setgameOver] = useState(false);\r\n  const [canClick, setCanClick] = useState(false);\r\n  const [canStartOver, setCanStartOver] = useState(true);\r\n  const [userName, setUserName] = useState();\r\n  const [highestResult, setHighestResult] = useState(0);\r\n  let timeInterval;\r\n\r\n  useEffect(() => {\r\n    setUserName(document.cookie.split('=')[1])\r\n  }, [])\r\n \r\n  const getRandomControler = () => {\r\n    const controlers = [\r\n     \"blue\", 'green', 'red', 'yellow'\r\n    ]\r\n\r\n    return controlers[Math.floor(Math.random() * controlers.length)]\r\n  }\r\n\r\n  function startByButton(){\r\n    setCanStartOver(false)\r\n    startGame()\r\n  }\r\n  \r\n  const startGame = async () => {\r\n    setTime(15); \r\n    time1=16\r\n    setCanClick(false) ;\r\n    sequence = [...sequence, getRandomControler()]\r\n    console.log(sequence);\r\n\r\n    for (const color of sequence) {\r\n      await flashAndPlayAudio(color,250);\r\n    }\r\n\r\n   sequenceCopyArray = [...sequence];\r\n    setCanClick(true) ;\r\n    \r\n   timeInterval = setInterval(myTimer, 1000);\r\n\r\n   function myTimer() {\r\n    time1 = time1-1;\r\n    setTime(time1); \r\n    if(time1===0 || sequenceCopyArray.length===0 || gameOver===true){\r\n      clearInterval(timeInterval);\r\n      if(time1===0){\r\n \r\n        setgameOver(true);\r\n        time1=15;\r\n\r\n\r\n        let currentResult = sequence.length-1;\r\n        if(currentResult>highestResult){\r\n          setHighestResult(currentResult)\r\n        }\r\n\r\n        // currentResult>highestResult ? setHighestResult(currentResult) : null\r\n          \r\n \r\n      // setUserRecord(sequence.length);\r\n   \r\n\r\n        \r\n\r\n      }\r\n    }\r\n   }\r\n  }\r\n\r\n//   useEffect(() => {\r\n//     fetch('/getUserLastRecord',{\r\n//       method: 'post',\r\n//       headers: {\r\n//           'Content-Type': 'application/json'\r\n//       },\r\n//       body: JSON.stringify({userName})\r\n//        })\r\n//     .then(response => response.json())\r\n//     .then(data => {\r\n//       console.log(data);\r\n//     });\r\n\r\n// }, [])\r\n\r\n  \r\nasync function clickColor(e){\r\n\r\n   if(!canClick) return;\r\n    let clickedControler = e.currentTarget.id;\r\n    console.log({clickedControler});\r\n    let expectedClick = sequenceCopyArray.shift();\r\n    console.log({expectedClick});\r\n  \r\n    if(expectedClick===clickedControler){\r\n          console.log(true);\r\n          console.log(sequenceCopyArray)\r\n          if(sequenceCopyArray.length===0){\r\n            console.log(('סיימתיאתהרצף'));\r\n\r\n            if(sequence.length>highestResult){\r\n              setHighestResult(sequence.length)\r\n            }\r\n            \r\n            setTimeout(() => {\r\n              startGame()\r\n            }, 2000);\r\n          }\r\n    }else{\r\n      setgameOver(true)\r\n      let currentResult = sequence.length-1;\r\n      if(currentResult>highestResult){\r\n        setHighestResult(currentResult)\r\n      }\r\n  \r\n          setCanClick(false);\r\n          sequence = [];\r\n          time1=15;\r\n          return;\r\n    }\r\n\r\n    flashAndPlayAudio(clickedControler,200);\r\n}\r\n\r\n\r\n\r\nfunction flashAndPlayAudio(color,timeOut){\r\n\r\n  return new Promise((resolve,rej)=>{\r\n\r\n    setTimeout(() => {\r\n     setFlashColor(color)\r\n      setTimeout(() => {\r\n        setFlashColor('')\r\n        resolve()\r\n      }, 250);\r\n    }, timeOut);\r\n\r\n    let audio;\r\n    switch(color) {\r\n      case 'red':\r\n        audio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound1.mp3');\r\n        audio.play();\r\n        break;\r\n      case 'blue':\r\n        audio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound2.mp3');\r\n        audio.play();\r\n        break;\r\n      case 'green':\r\n          audio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound3.mp3');\r\n          audio.play();\r\n          break;\r\n      case 'yellow':\r\n          audio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound4.mp3');\r\n          audio.play();\r\n          break;\r\n      default:\r\n    }\r\n  })\r\n}\r\n\r\nconst startAgain = () =>{\r\n  console.log('new game');\r\n  sequence=[];\r\n  setgameOver(false) ;\r\n  clearInterval(timeInterval);\r\n  setTime('--')\r\n  setCanStartOver(true)\r\n}\r\n\r\n  return (\r\n  <>\r\n  {\r\n    gameOver?\r\n    <div className='gameOver'>\r\n      <h1>game over</h1>\r\n      <div className='buttons'>\r\n      <button onClick={startAgain}>new game</button>\r\n      {/* <button>see my score</button> */}\r\n      </div>\r\n  \r\n    </div>\r\n    : \r\n    <>\r\n  <div className='info'>\r\n    <h1>Hello {userName}!</h1>\r\n    <h2>your highest result in this round is {highestResult} </h2>\r\n  </div>\r\n\r\n  <div className='board'>\r\n    <div id='blue' className={canClick?flashColor==='blue'?\"blueFlash\":'button blue':flashColor==='blue'?\"blueFlash\":'button blue notActive'} onClick={clickColor}  ></div>\r\n    <div id='yellow' className={canClick?flashColor==='yellow'?\"yellowFlash\":'button yellow':flashColor==='yellow'?\"yellowFlash\":'button yellow notActive'} onClick={clickColor}  ></div>\r\n    <div id='red' className={canClick?flashColor==='red'?\"redFlash\":'button red':flashColor==='red'?\"redFlash\":'button red notActive'} onClick={clickColor}  ></div>\r\n    <div id='green' className={canClick?flashColor==='green'?\"greenFlash\":'button green':flashColor==='green'?\"greenFlash\":'button green notActive'} onClick={clickColor}  ></div>\r\n    <div className={canStartOver?'start':'start notActive'}  onClick={canStartOver?startByButton:null}>\r\n      {language.startBtn}\r\n      <div className='timer'>{time}</div>\r\n    </div>\r\n  </div>\r\n\r\n\r\n  </>\r\n  }\r\n  </>);\r\n}\r\n\r\nexport default Game;\r\n\r\n","import React, { useEffect } from 'react';\r\nimport './Login.scss';\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\nfunction Login({ user, setUser, selectedOption, setSelectedOption, loginUser }) {\r\n\r\n  useEffect(() => {\r\n\r\n    fetch('/getData')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        console.log(data);\r\n      });\r\n\r\n  }, [])\r\n\r\n  function onUserNameValueChange(e) {\r\n    document.cookie = `username=${e.target.value}`;\r\n  }\r\n\r\n  return (\r\n    <div className='loginForm'>\r\n      <form >\r\n\r\n        <h1>Welcome to the simon game</h1>\r\n      \r\n        <h3>play as</h3>\r\n        <input type='text' placeholder='enter username' name='userName' required onChange={onUserNameValueChange} />\r\n\r\n        <h3>Select a difficulty level</h3>\r\n        <div className=\"radio\">\r\n          <label>\r\n            <input\r\n              value='easy'\r\n              name='Difficulty'\r\n              type=\"radio\"\r\n              required\r\n            />\r\n           easy (15 min)\r\n          </label>\r\n        </div>\r\n        <div className=\"radio\">\r\n          <label>\r\n            <input\r\n              name='Difficulty'\r\n              type=\"radio\"\r\n              value=\"medium\"\r\n            />\r\n            medium (10 min)\r\n          </label>\r\n        </div>\r\n        <div className=\"radio\">\r\n          <label>\r\n            <input\r\n              name='Difficulty'\r\n              type=\"radio\"\r\n            />\r\n            Hard (5 min)\r\n          </label>\r\n        </div>\r\n\r\n        <button type='submit'><Link to=\"/simon\" style={{ 'text-decoration': 'none', 'color': 'black' }}> play</Link></button>\r\n\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login;\r\n","import React, {  useState } from \"react\";\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n// components\nimport Game from './view/components/Game/Game'\nimport Login from './view/components/Login/Login'\n\nlet loginUser;\n\nfunction App() {\n\n  \n  const [selectedOption,setSelectedOption] = useState();\n  const [user,setUser] = useState('אני');\n\n  const English = {\n    title: 'simon game',\n    routerGame: 'game',\n    routerSettings: 'settings',\n    startBtn: 'start'\n  }\n\n  // const Hebrew = {\n  //   title: 'משחק סיימון',\n  //   routerGame: 'משחק',\n  //   routerSettings: 'הגדרות',\n  //   startBtn: 'התחל'\n  // }\n\n  const [language, setlanguage] = useState(English);\n\n  return (\n\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/simon\">\n            <Game language={language} user={user} setUser={setUser} selectedOption={selectedOption} setSelectedOption={setSelectedOption} loginUser={loginUser}/>\n          </Route>\n          <Route path=\"/\">\n            <Login user={user} setUser={setUser} selectedOption={selectedOption} setSelectedOption={setSelectedOption} loginUser={loginUser}/>\n          </Route>\n        </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n// הזמנים שיהיו נכונים בכל מצב דילאי\n//  הגדרות שמאפשרות לשלוט בטיימר,בשפה ואולי גם אם יהיה משחק קשיח או לא\n//חיבורלדטאבייס,חיבור עם שם משתמש ושמירת השיא\n//סידור הקודד,שמות קריאים\n//טיימר למהלא ביוז סטייט\n\n//איךאפשרלעשות כמהיוזסטיטים לclassName","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}