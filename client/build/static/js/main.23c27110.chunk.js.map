{"version":3,"sources":["view/components/Game2/Game2.jsx","view/components/Settings/Settings.jsx","App.js","reportWebVitals.js","i18next.js","index.js"],"names":["Game2","Settings","setUserName","setLanguage","setLevel","setUser","useTranslation","t","i18n","history","useHistory","changLang","lang","changeLanguage","getUserDetailsOrCreateNewUser","userName","fetch","method","headers","body","JSON","stringify","then","response","json","userData","className","onSubmit","e","preventDefault","target","children","value","push","htmlFor","type","name","id","onChange","placeholder","required","checked","App","useState","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","whitelist","interpolation","escapeValue","ReactDOM","render","StrictMode","fallback","document","getElementById"],"mappings":"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","file":"static/js/main.23c27110.chunk.js","sourcesContent":["import React from 'react'\r\nimport '../Game2/Game2.scss'\r\n\r\nfunction Game2() {\r\n  return (\r\n    <div>\r\n      hello\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Game2\r\n","import React from 'react';\r\nimport './Settings.scss';\r\nimport {\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction Settings({ setUserName, setLanguage, setLevel, setUser }) {\r\n  // user, setUser, selectedOption, setSelectedOption, loginUser\r\n  const { t, i18n } = useTranslation();\r\n  const history = useHistory();\r\n\r\n\r\n  const changLang = (lang) => {\r\n    i18n.changeLanguage(lang)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let userName = e.target.children.userName.value;\r\n    getUserDetailsOrCreateNewUser(userName);\r\n    history.push(\"/simon\");\r\n  }\r\n\r\n  const getUserDetailsOrCreateNewUser = (userName)=> {\r\n\r\n    fetch('/validatUserName', {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ userName })\r\n    })\r\n      .then(response => response.json())\r\n      .then(({ userData }) => {\r\n        setUser(userData)\r\n\r\n        // setRecord(data.userData.record1)\r\n        // originalRecord = data.userData.record1;\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className='settingsForm'>\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>{t('settingPage.title')}</h1>\r\n\r\n        <h3>{t('settingPage.lang')}</h3>\r\n        <label htmlFor=\"English\">{t('settingPage.English')}</label>\r\n        <input\r\n          type=\"radio\"\r\n          name='language'\r\n          value='English'\r\n          id='English'\r\n          onChange={() => changLang('en')}\r\n        />\r\n        <label htmlFor=\"Hebrew\">{t('settingPage.Hebrew')}</label>\r\n        <input\r\n          type=\"radio\"\r\n          name=\"language\"\r\n          value='Hebrew'\r\n          id=\"Hebrew\"\r\n          onChange={() => changLang('hi')}\r\n        />\r\n\r\n        <h3>{t('settingPage.playAs')}</h3>\r\n        <input\r\n          type='text'\r\n          placeholder={t('settingPage.placeholder')}\r\n          name='userName'\r\n          required\r\n        />\r\n\r\n        <h3>{t('settingPage.difficultyLevel')}</h3>\r\n        <div className=\"level\">\r\n          <label>\r\n            <input\r\n              value='easy'\r\n              name='Difficulty'\r\n              type=\"radio\"\r\n              required\r\n              checked={true}\r\n              onChange={() => setLevel(15)}\r\n            />\r\n            {t('settingPage.easy')}\r\n          </label>\r\n        </div>\r\n        <div className=\"radio\">\r\n          <label>\r\n            <input\r\n              name='Difficulty'\r\n              type=\"radio\"\r\n              value=\"medium\"\r\n              onChange={() => setLevel(10)}\r\n            />\r\n            {t('settingPage.medium')}\r\n          </label>\r\n        </div>\r\n        <div className=\"radio\">\r\n          <label>\r\n            <input\r\n              name='Difficulty'\r\n              type=\"radio\"\r\n              value=\"hard\"\r\n              onChange={() => setLevel(5)}\r\n            />\r\n            {t('settingPage.Hard')}\r\n          </label>\r\n        </div>\r\n\r\n        <button type='submit'>{t('settingPage.play')}</button>\r\n        {/* <button type='submit'><Link to=\"/simon\" style={{ 'textDecoration': 'none', 'color': 'black' }}>{t('settingPage.play')}</Link></button> */}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Settings;\r\n","import React, {  useState } from \"react\";\nimport './App.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n// components\nimport Game from './view/components/Game/Game'\nimport Game2 from './view/components/Game2/Game2'\nimport Settings from './view/components/Settings/Settings'\n\n\n\nfunction App() {\n\n\n  const [userName,setUserName] = useState('');\n  const [user,setUser] = useState({});\n  const [language,setLanguage] = useState('English');\n  const [level,setLevel] = useState(15);\n  const [counter,setCounter] = useState(0);\n\n  return (\n\n    // <div className=\"App\">\n    //     <Counter setCounter={setCounter} counter={counter}/>\n    //     <Counter2  counter={counter}/>\n    // </div>\n\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/simon\">\n            <Game2/>\n            {/* <Game states={{user,userName,language,level,setUserName,setLanguage,setLevel}} level={level} setLevel={setLevel} /> */}\n          </Route>\n          <Route path=\"/\">\n            <Settings setUserName={setUserName} setLanguage={setLanguage} setLevel={setLevel} setUser={setUser}/>\n          </Route>\n        </Switch>\n     </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n// הזמנים שיהיו נכונים בכל מצב דילאי\n//  הגדרות שמאפשרות לשלוט בטיימר,בשפה ואולי גם אם יהיה משחק קשיח או לא\n//חיבורלדטאבייס,חיבור עם שם משתמש ושמירת השיא\n//סידור הקודד,שמות קריאים\n//טיימר למהלא ביוז סטייט\n\n//איךאפשרלעשות כמהיוזסטיטים לclassName","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n// don't want to use this?\r\n// have a look at the Quick start guide \r\n// for passing in lng and translations on init\r\n\r\nconst Languages = ['en', 'hi'];\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: 'en',\r\n    debug: true,\r\n    whitelist: Languages,\r\n\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    }\r\n  });\r\n\r\n\r\nexport default i18n;","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './i18next'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={(<div>loading~~~</div>)}>\n      <App />\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}