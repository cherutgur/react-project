{"version":3,"sources":["view/components/GameOver/GameOver.jsx","view/components/RatingTable/RatingTable.jsx","view/components/Game2/Game2.jsx","view/components/Settings/Settings.jsx","App.js","reportWebVitals.js","i18next.js","index.js"],"names":["GameOver","gameOverReason","setgameOver","setCanStartOver","setHighestResult","t","useTranslation","className","onClick","RatingTable","record","userName","level","i18n","useState","usersToRender","setUsersToRender","useEffect","getUsers","console","log","fetch","then","response","json","users","RatedUsers","sort","a","b","record1","record2","record3","map","user","index","style","backgroundColor","sequence","sequenceCopyArray","Game2","setUser","constructor","Object","keys","length","document","cookie","split","method","headers","body","JSON","stringify","userData","canStartOver","flashColor","setFlashColor","activeButton","setActiveButton","timer","setTimer","runTimer","setRunTimer","setRecord","highestResult","gameOver","classNames","require","startRounds","getRandomColor","color","flashAndPlayAudio","id","setTimeout","clearTimeout","colors","Math","floor","random","timeOut","Promise","resolve","reject","Audio","play","handleColorBtnClick","e","checkClick","currentTarget","clickedColor","shift","updateRecord","newRecord","data","startButtonClassNames","blueButtonClassNames","redButtonClassNames","greenButtonClassNames","yellowButtonClassNames","to","type","Settings","setUserName","setLanguage","setLevel","history","useHistory","error","setError","changLang","lang","changeLanguage","getUserDetailsOrCreateNewUser","password","push","onSubmit","preventDefault","target","children","value","placeholder","name","required","htmlFor","onChange","checked","src","alt","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","whitelist","interpolation","escapeValue","ReactDOM","render","StrictMode","fallback","getElementById"],"mappings":"iTAmCeA,MA/Bf,YAAkF,IAA/DC,EAA8D,EAA9DA,eAAeC,EAA+C,EAA/CA,YAAYC,EAAmC,EAAnCA,gBAAgBC,EAAmB,EAAnBA,iBAEpDC,EAAMC,cAAND,EAeR,OAEE,sBAAKE,UAAU,WAAf,UACE,6BAAKF,EAAE,2BACP,6BACiCA,EAAb,cAAjBJ,EAAgC,yBAA8B,8BACjE,qBAAKM,UAAU,UAAf,SACE,wBAAQC,QApBK,WAIjBL,GAAgB,GAChBC,EAAiB,GACjBF,GAAY,IAcR,SAA8BG,EAAE,gC,MCyCzBI,MAhEf,YAA+C,IAAzBC,EAAwB,EAAxBA,OAAOC,EAAiB,EAAjBA,SAASC,EAAQ,EAARA,MAAQ,EAExBN,cAAZD,EAFoC,EAEpCA,EAFoC,KAEjCQ,KAC+BC,mBAAS,CAAC,CAACH,SAAS,cAHlB,mBAGrCI,EAHqC,KAGtBC,EAHsB,KAK5CC,qBAAU,WACRC,IACAC,QAAQC,IAAI,iBACZD,QAAQC,IAAI,CAACV,aAGZ,CAACA,IAEJ,IAAMQ,EAAW,WAEfG,MAAM,aACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,YAAgB,IAAbG,EAAY,EAAZA,MACHC,EAAaD,EAAME,MAAK,SAAUC,EAAGC,GACvC,OAAW,KAARjB,EAAmBiB,EAAEC,QAAUF,EAAEE,QACzB,KAARlB,EAAmBiB,EAAEE,QAAUH,EAAEG,QACzB,IAARnB,EAAkBiB,EAAEG,QAAUJ,EAAEI,aAAnC,KAEFhB,EAAiBU,GACjBP,QAAQC,IAAI,iBACZD,QAAQC,IAAIK,OAMlB,OAKE,cAHA,CAGA,OAAKlB,UAAU,QAAf,UACE,qBAAIA,UAAU,eAAd,UAA8BF,EAAE,kBAAhC,IAA8D,KAAVO,EAAe,EAAc,KAAVA,EAAe,EAAI,KAC1F,kCACE,gCACE,+BACE,6BAAKP,EAAE,iCACP,6BAAKA,EAAE,oCAGX,gCACGU,EAAckB,KAAI,SAACC,EAAMC,GACxB,OAEE,qBAAgBC,MAAQF,EAAKvB,WAAcA,EAAW,CAAE0B,gBAAiB,SAAY,KAAM9B,UAAY2B,EAAKvB,WAAcA,EAAU,+BAAiC,YAArK,UACE,6BAAMuB,EAAKvB,WACX,6BACY,KAAVC,EACEsB,EAAKJ,QAAoB,KAAVlB,EAAesB,EAAKH,QAAUG,EAAKF,YAJ/CG,eCxCnBG,EAAW,GACXC,EAAoB,GAoVTC,MAjVf,YAA0C,IAAzBN,EAAwB,EAAxBA,KAAMtB,EAAkB,EAAlBA,MAAO6B,EAAW,EAAXA,QAG5BxB,qBAAU,WAIR,GAFAE,QAAQC,IAAI,WACZD,QAAQC,IAAIc,GACRA,EAAKQ,cAAgBC,QAAuC,IAA7BA,OAAOC,KAAKV,GAAMW,OAAc,CACjE,IAAIlC,EAAWmC,SAASC,OAAOC,MAAM,KAAK,GAE5C7B,QAAQC,IAAIT,GACZQ,QAAQC,IAAI,WAGVC,MAAM,qBAAsB,CAC1B4B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAE1C,eAEtBW,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,YAAiB,IAAfgC,EAAc,EAAdA,SAENnC,QAAQC,IAAIkC,GACZb,EAAQa,SASb,IAlCoC,IAuC/BjD,EAAMC,cAAND,EAvC+B,EAwCCS,oBAAS,GAxCV,mBAwChCyC,EAxCgC,KAwClBpD,EAxCkB,OAyCHW,mBAAS,IAzCN,mBAyChC0C,EAzCgC,KAyCpBC,EAzCoB,OA0CC3C,oBAAS,GA1CV,mBA0ChC4C,EA1CgC,KA0ClBC,EA1CkB,OA4Cb7C,mBAASF,GA5CI,mBA4ChCgD,EA5CgC,KA4CzBC,EA5CyB,OA6CP/C,oBAAS,GA7CF,mBA6ChCgD,EA7CgC,KA6CtBC,EA7CsB,OA8CXjD,qBA9CW,mBA8ChCJ,EA9CgC,KA8CxBsD,EA9CwB,OA+CGlD,mBAAS,GA/CZ,mBA+ChCmD,EA/CgC,KA+CjB7D,EA/CiB,OAgDPU,oBAAS,GAhDF,mBAgDhCoD,EAhDgC,KAgDtBhE,EAhDsB,KAkDjCiE,EAAaC,EAAQ,IAE3BnD,qBAAU,WACG,KAARL,GACDoD,EAAU9B,EAAKJ,SACEI,EAAKJ,SACP,KAARlB,GACPoD,EAAU9B,EAAKH,SACEG,EAAKH,SACP,IAARnB,IACPoD,EAAU9B,EAAKF,SACEE,EAAKF,WAIvB,CAACE,IAEJ,IAMMmC,EAAW,uCAAG,gCAAAzC,EAAA,sDAElBiC,EAASjD,GACT+C,GAAgB,GAChBrB,EAAQ,sBAAOA,GAAP,CAAiBgC,MACzBnD,QAAQC,IAAIkB,GALM,cAOEA,GAPF,gEAOPiC,EAPO,kBAQVC,GAAkBD,EAAO,KARf,+IAWlBhC,EAAiB,YAAOD,GAExBqB,GAAgB,GAChBI,GAAY,GAdM,gEAAH,qDAiBjB9C,qBAAU,WACR,GAAK6C,EAAL,CACA,KAAIF,GAAS,GAAb,CAIA,IAAMa,EAAKC,YAAW,WACpBb,EAASD,EAAQ,KAChB,KACH,OAAO,WACLe,aAAaF,IAPbvE,EAAY,kBAFGiB,QAAQC,IAAI,gBAW5B,CAACwC,EAAOE,IAEX,IAAMQ,EAAiB,WACrB,IAAMM,EAAS,CACb,OAAQ,QAAS,MAAO,UAE1B,OAAOA,EAAOC,KAAKC,MAAMD,KAAKE,SAAWH,EAAO/B,UAG5C2B,GAAoB,SAACD,EAAOS,GAEhC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAW3B,OATAT,YAAW,WACTjB,EAAcc,GACdG,YAAW,WACTjB,EAAc,IACdyB,MACC,OACFF,GAGKT,GACN,IAAK,MACK,IAAIa,MAAM,yDACZC,OACN,MACF,IAAK,OACK,IAAID,MAAM,yDACZC,OACN,MACF,IAAK,QACK,IAAID,MAAM,yDACZC,OACN,MACF,IAAK,SACK,IAAID,MAAM,yDACZC,YAORC,GAAsB,SAACC,GACtB7B,EAnJgC,qCAqJrC8B,CADmBD,EAAEE,cAAchB,IADdtD,QAAQC,IAAI,uBAnJI,8CA0JvC,WAA0BsE,GAA1B,SAAA9D,EAAA,sDAEsBW,EAAkBoD,UAEhBD,GACpBlB,GAAkBkB,EAAc,KAEC,IAA7BnD,EAAkBM,SACpBkB,GAAY,GACZ3D,EAAiBkC,EAASO,QAKtBP,EAASO,OAASnC,IACpBsD,EAAU1B,EAASO,QAErB+C,GAAa1D,EAAKvB,SAAU2B,EAASO,OAAOjC,IAI5C8D,YAAW,WACTL,MACC,QAGLlD,QAAQC,IAAI,eAOZyC,EAASjD,GACTmD,GAAY,GACZ7D,EAAY,eASZyD,GAAgB,GAChBxD,GAAgB,GAChBmC,EAAW,IA9Cf,4CA1JuC,sBA6MvC,IAAMsD,GAAe,SAACjF,EAAUD,EAAOE,GACrCS,MAAM,gBAAiB,CACrB4B,OAAQ,MACRE,KAAMC,KAAKC,UAAU,CACnB1C,WACAkF,UAAWnF,EACXE,UAEFsC,QAAS,CACP,eAAgB,qCAGjB5B,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAwE,GAAU3E,QAAQC,IAAI0E,GAAO3E,QAAQC,IAAI,cAgC7C2E,GAAwB5B,EAC5B,QACA,CAAE,WAAcZ,IAGZyC,GAAuB7B,EAC3B,CAAE,UAAaT,GAA+B,SAAfF,GAC/B,CAAE,cAAeE,GAA+B,SAAfF,GACjC,CAAE,WAAcE,GAA+B,SAAfF,GAChC,CAAE,yBAA0BE,GAA+B,SAAfF,IAGxCyC,GAAsB9B,EAC1B,CAAE,SAAYT,GAA+B,QAAfF,GAC9B,CAAE,aAAcE,GAA+B,QAAfF,GAChC,CAAE,UAAaE,GAA+B,QAAfF,GAC/B,CAAE,wBAAyBE,GAA+B,QAAfF,IAGvC0C,GAAwB/B,EAC5B,CAAE,WAAcT,GAA+B,UAAfF,GAChC,CAAE,eAAgBE,GAA+B,UAAfF,GAClC,CAAE,YAAeE,GAA+B,UAAfF,GACjC,CAAE,0BAA2BE,GAA+B,UAAfF,IAGzC2C,GAAyBhC,EAC7B,CAAE,YAAeT,GAA+B,WAAfF,GACjC,CAAE,gBAAiBE,GAA+B,WAAfF,GACnC,CAAE,aAAgBE,GAA+B,WAAfF,GAClC,CAAE,2BAA4BE,GAA+B,WAAfF,IAWhD,OACE,mCAEIU,EACE,cAAC,EAAD,CAAUjE,eAAgBiE,EAAU/D,gBAAiBA,EAAiBD,YAAaA,EAAaE,iBAAkBA,IAElH,sBAAKG,UAAU,WAAf,UACE,qBAAIA,UAAU,kBAAd,UAAiCF,EAAE,kBAAnC,IAAuD6B,EAAKvB,YAC5D,qBAAIJ,UAAU,iBAAd,UAAgCF,EAAE,2BAAlC,IAA+DK,KAC/D,qBAAIH,UAAU,iBAAd,UAAgCF,EAAE,2BAAlC,IAA+D4D,EAA/D,OAEA,sBAAK1D,UAAU,QAAf,UACE,qBAAKkE,GAAG,OAAOlE,UAAWyF,GAAsBxF,QAAS8E,KACzD,qBAAKb,GAAG,SAASlE,UAAW4F,GAAwB3F,QAAS8E,KAC7D,qBAAKb,GAAG,MAAMlE,UAAW0F,GAAqBzF,QAAS8E,KACvD,qBAAKb,GAAG,QAAQlE,UAAW2F,GAAuB1F,QAAS8E,KAC3D,sBAAK/E,UAAWwF,GAAuBvF,QAhP3B,SAAC+E,GAClBhC,IACLpD,GAAgB,GAChBkE,MA6OU,UACGhE,EAAE,kBACH,qBAAKE,UAAU,QAAf,SAAwBqD,UAI5B,cAAC,IAAD,CAAMwC,GAAG,IAAIhE,MAAO,CAAE,eAAkB,OAAQ,MAAS,SAAzD,SACE,wBAAQ5B,QAAS,kBAAM8B,EAAW,IAAI+D,KAAK,SAAS9F,UAAU,oBAA9D,SACGF,EAAE,wBAGP,cAAC,EAAD,CAAaK,OAAQA,EAAQC,SAAUuB,EAAKvB,SAAUC,MAAOA,UC3K1D0F,MA9Jf,YAAmE,EAA/CC,YAA+C,EAAlCC,YAAmC,IAAtBC,EAAqB,EAArBA,SAAUhE,EAAW,EAAXA,QAAW,EAE7CnC,cAAZD,EAFyD,EAEzDA,EAAGQ,EAFsD,EAEtDA,KACL6F,EAAUC,cAHiD,EAIvC7F,oBAAS,GAJ8B,mBAI1D8F,EAJ0D,KAInDC,EAJmD,KAQ3DC,EAAY,SAACC,GACjBlG,EAAKmG,eAAeD,IAgBhBE,EAA6B,uCAAG,WAAOtG,EAAUuG,GAAjB,SAAAtF,EAAA,sEAE9BP,MAAM,mBAAoB,CAC9B4B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAE1C,WAAUuG,eAEhC5F,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACwE,GACL3E,QAAQC,IAAI,CAAE0E,SACVA,EAAKxC,UACPb,EAAQqD,EAAKxC,UACbnC,QAAQC,IAAI,YACZsF,EAAQS,KAAK,WACNN,GAAS,MAhBc,2CAAH,wDAyBnC,OAEE,sBAAKtG,UAAU,eAAf,UACE,uBAAM6G,SAzCW,SAAC7B,GACpBA,EAAE8B,iBACF,IAAI1G,EAAW4E,EAAE+B,OAAOC,SAAS5G,SAAS6G,MACtCN,EAAW3B,EAAE+B,OAAOC,SAASL,SAASM,MAC1CrG,QAAQC,IAAI8F,GACZpE,SAASC,OAAT,mBAA8BpC,GAC9BsG,EAA8BtG,EAAUuG,IAmCtC,UAEE,oBAAI3G,UAAU,sBAAd,SAAqCF,EAAE,uBAGvC,oBAAIE,UAAU,4BAAd,SAA2CF,EAAE,wBAC7C,uBAAOE,UAAU,sBACf8F,KAAK,OACLoB,YAAapH,EAAE,2BACfqH,KAAK,WACLC,UAAQ,IAEV,uBAAOpH,UAAU,sBACf8F,KAAK,WACLoB,YAAapH,EAAE,4BACfqH,KAAK,WACLC,UAAQ,IAEV,mBAAGpH,UAAU,2BAAb,SACGqG,EAAQvG,EAAE,0BAA4B,OAIzC,sBAAKE,UAAU,sBAAf,UAEE,sBAAKA,UAAU,OAAf,UACE,6BAAKF,EAAE,sBACP,wBAAOuH,QAAQ,UAAf,UAA0BvH,EAAE,uBAC5B,uBACEgG,KAAK,QACLqB,KAAK,WACLF,MAAM,UACN/C,GAAG,UAEHoD,SAAU,kBAAMf,EAAU,YAG5B,wBAAOc,QAAQ,SAAf,UAAyBvH,EAAE,sBAC3B,uBACEgG,KAAK,QACLqB,KAAK,WACLF,MAAM,SACN/C,GAAG,SACHoD,SAAU,kBAAMf,EAAU,eAK9B,sBAAKvG,UAAU,QAAf,UACE,6BAAKF,EAAE,iCAEP,sBAAKE,UAAU,cAAf,UACE,8BACE,kCACE,uBACEiH,MAAM,OACNE,KAAK,aACLrB,KAAK,QACLsB,UAAQ,EACRG,SAAS,EACTD,SAAU,kBAAMpB,EAAS,OAG1BpG,EAAE,yBAIP,qBAAKE,UAAU,QAAf,SACE,kCACE,uBACEmH,KAAK,aACLrB,KAAK,QACLmB,MAAM,SACNK,SAAU,kBAAMpB,EAAS,OAG1BpG,EAAE,2BAIP,qBAAKE,UAAU,QAAf,SACE,kCACE,uBACEmH,KAAK,aACLrB,KAAK,QACLmB,MAAM,OACNK,SAAU,kBAAMpB,EAAS,MAG1BpG,EAAE,kCAOb,wBAAQgG,KAAK,SAAQ9F,UAAU,SAA/B,SAAyCF,EAAE,yBAG7C,qBAAK0H,IAAI,2BAA2BC,IAAI,iBC/G/BC,MAhCf,WAAgB,IAAD,EAGkBnH,mBAAS,IAH3B,mBAGGyF,GAHH,aAIUzF,mBAAS,IAJnB,mBAINoB,EAJM,KAIDO,EAJC,OAKkB3B,mBAAS,WAL3B,mBAKG0F,GALH,aAMY1F,mBAAS,IANrB,mBAMNF,EANM,KAMA6F,EANA,OAOgB3F,mBAAS,GAPzB,mBASb,OATa,UAgBX,aALA,CAKA,OAAKP,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2H,KAAK,SAAZ,SACE,cAAC,EAAD,CAAOhG,KAAMA,EAAMtB,MAAOA,EAAO6B,QAASA,MAG5C,cAAC,IAAD,CAAOyF,KAAK,IAAZ,SACE,cAAC,EAAD,CAAU3B,YAAaA,EAAaC,YAAaA,EAAaC,SAAUA,EAAUhE,QAASA,cC5BxF0F,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/G,MAAK,YAAkD,IAA/CgH,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,gCCIdvH,IAGG8H,IAAIC,KAGJD,IAAIE,KAEJF,IAAIG,KAGJC,KAAK,CACJC,YAAa,KACbC,OAAO,EACPC,UAhBc,CAAC,KAAM,MAkBrBC,cAAe,CACbC,aAAa,KAKJvI,EAAf,ECzBAwI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,WAAD,CAAUC,SAAW,6CAArB,SACE,cAAC,EAAD,QAGJ1G,SAAS2G,eAAe,SAM1BtB,M","file":"static/js/main.f2aae527.chunk.js","sourcesContent":["import React from 'react'\r\n// import '../GameOver/GameOver.scss'\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction GameOver({gameOverReason,setgameOver,setCanStartOver,setHighestResult}) {\r\n\r\n  const { t } = useTranslation();\r\n\r\n  const startAgain = () => {\r\n    // sequence = [];\r\n    \r\n    // setTimer(level)\r\n    setCanStartOver(true)\r\n    setHighestResult(0)\r\n    setgameOver(false);\r\n\r\n    // clearInterval(timeInterval);\r\n  }\r\n\r\n  \r\n\r\n  return (\r\n\r\n    <div className='gameOver'>\r\n      <h1>{t('gameOverPage.gameOver')}</h1>\r\n      <h2>\r\n        {gameOverReason===\"time`s up\"? t('gameOverPage.time`s up') : t('gameOverPage.wrong color')}</h2>\r\n      <div className='buttons'>\r\n        <button onClick={startAgain}>{t('gameOverPage.newGame')}</button>\r\n      </div>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default GameOver\r\n","import classNames from 'classnames';\r\nimport React, {useEffect,useState} from 'react'\r\n// import '../RatingTable/RatingTable.scss'\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction RatingTable({record,userName,level}) {\r\n\r\n  const { t, i18n } = useTranslation();\r\n  const [usersToRender, setUsersToRender] = useState([{userName:'loading'}])\r\n\r\n  useEffect(() => {\r\n    getUsers();\r\n    console.log('record change');\r\n    console.log({record});\r\n    // RateTheUsers(users);\r\n    // renderToTable()\r\n  }, [record])\r\n\r\n  const getUsers = () => {\r\n\r\n    fetch('/getUsers')\r\n      .then(response => response.json())\r\n      .then(({ users }) => {\r\n        let RatedUsers = users.sort(function (a, b) {\r\n          if(level===15) return b.record1 - a.record1;\r\n          if(level===10) return b.record2 - a.record2;\r\n          if(level===5) return b.record3 - a.record3;\r\n        })\r\n        setUsersToRender(RatedUsers)\r\n        console.log('set new users');\r\n        console.log(users);\r\n      }\r\n      )\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    // \r\n\r\n    // // table__td\r\n    <div className='table'>\r\n      <h1 className='table__title'>{t('gamePage.level')} {level === 15 ? 1 : level === 10 ? 2 : 3}</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>{t('gamePage.tableTitleUserName')}</th>\r\n            <th>{t('gamePage.tableTitleRecord')}</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {usersToRender.map((user, index) => {\r\n            return (\r\n\r\n              <tr key={index} style={(user.userName) === userName ? { backgroundColor: \"green\" } : null} className={(user.userName) === userName? 'table__tr table__tr--current' : 'table__tr'}>\r\n                <th >{user.userName}</th>\r\n                <th>{\r\n                  level === 15 ?\r\n                    user.record1 : level === 10 ? user.record2 : user.record3}</th>\r\n              </tr>\r\n            )\r\n          }\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RatingTable\r\n","import React, { useEffect, useState, useCallback } from 'react'\r\n// import '../Game2/Game2.scss'\r\nimport {\r\n  BrowserRouter as Router,\r\n  Link\r\n} from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\n\r\n\r\n// components\r\nimport GameOver from '../GameOver/GameOver'\r\nimport RatingTable from '../RatingTable/RatingTable'\r\n\r\nlet sequence = [];\r\nlet sequenceCopyArray = [];\r\nlet originalRecord;\r\n\r\nfunction Game2({ user, level, setUser }) {\r\n\r\n\r\n  useEffect(() => {\r\n\r\n    console.log('7777777');\r\n    console.log(user);\r\n    if (user.constructor === Object && Object.keys(user).length === 0) {\r\n      let userName = document.cookie.split('=')[1];\r\n      \r\n    console.log(userName);\r\n    console.log('8888888');\r\n\r\n\r\n      fetch('/getUserDataByName', {\r\n        method: 'post',\r\n        headers: {\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ userName })\r\n      })\r\n        .then(response => response.json())\r\n        .then(({userData}) => {\r\n          // console.log(data);\r\n          console.log(userData);\r\n          setUser(userData)\r\n\r\n          // setRecord(data.userData.record1)\r\n          // originalRecord = data.userData.record1;\r\n        });\r\n\r\n    }\r\n\r\n    // if (user = {}) {\r\n  }, [])\r\n\r\n\r\n\r\n\r\n  const { t } = useTranslation();\r\n  const [canStartOver, setCanStartOver] = useState(true)\r\n  const [flashColor, setFlashColor] = useState('')\r\n  const [activeButton, setActiveButton] = useState(false)\r\n  // const [arrows, setArrows] = useState(false)\r\n  const [timer, setTimer] = useState(level)\r\n  const [runTimer, setRunTimer] = useState(false)\r\n  const [record, setRecord] = useState();\r\n  const [highestResult, setHighestResult] = useState(0);\r\n  const [gameOver, setgameOver] = useState(false);\r\n\r\n  const classNames = require('classnames');\r\n\r\n  useEffect(() => {\r\n    if(level===15){\r\n      setRecord(user.record1)\r\n      originalRecord = user.record1;\r\n    }else if(level===10){\r\n      setRecord(user.record2)\r\n      originalRecord = user.record2;\r\n    }else if(level===5){\r\n      setRecord(user.record3)\r\n      originalRecord = user.record3;\r\n    }\r\n\r\n  \r\n  }, [user])\r\n\r\n  const handleStartGame = (e) => {\r\n    if (!canStartOver) return;\r\n    setCanStartOver(false)\r\n    startRounds()\r\n  }\r\n\r\n  const startRounds = async () => {\r\n\r\n    setTimer(level)\r\n    setActiveButton(false)\r\n    sequence = [...sequence, getRandomColor()]\r\n    console.log(sequence);\r\n\r\n    for (const color of sequence) {\r\n      await flashAndPlayAudio(color, 250);\r\n    }\r\n\r\n    sequenceCopyArray = [...sequence];\r\n\r\n    setActiveButton(true);\r\n    setRunTimer(true)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!runTimer) { console.log('timer stop'); return };\r\n    if (timer <= 0) {\r\n      setgameOver('time`s up')\r\n      return\r\n    };\r\n    const id = setTimeout(() => {\r\n      setTimer(timer - 1)\r\n    }, 1000);\r\n    return () => {\r\n      clearTimeout(id);\r\n    };\r\n  }, [timer, runTimer])\r\n\r\n  const getRandomColor = () => {\r\n    const colors = [\r\n      \"blue\", 'green', 'red', 'yellow'\r\n    ]\r\n    return colors[Math.floor(Math.random() * colors.length)]\r\n  }\r\n\r\n  const flashAndPlayAudio = (color, timeOut) => {\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      setTimeout(() => {\r\n        setFlashColor(color)\r\n        setTimeout(() => {\r\n          setFlashColor('')\r\n          resolve()\r\n        }, 250);\r\n      }, timeOut);\r\n\r\n      let audio;\r\n      switch (color) {\r\n        case 'red':\r\n          audio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound1.mp3');\r\n          audio.play();\r\n          break;\r\n        case 'blue':\r\n          audio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound2.mp3');\r\n          audio.play();\r\n          break;\r\n        case 'green':\r\n          audio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound3.mp3');\r\n          audio.play();\r\n          break;\r\n        case 'yellow':\r\n          audio = new Audio('https://s3.amazonaws.com/freecodecamp/simonSound4.mp3');\r\n          audio.play();\r\n          break;\r\n        default:\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleColorBtnClick = (e) => {\r\n    if (!activeButton) { console.log('butoons not active'); return };\r\n    let clickedColor = e.currentTarget.id;\r\n    checkClick(clickedColor);\r\n  }\r\n\r\n\r\n\r\n  async function checkClick(clickedColor) {\r\n\r\n    let expectedClick = sequenceCopyArray.shift();\r\n\r\n    if (expectedClick === clickedColor) {\r\n      flashAndPlayAudio(clickedColor, 200);\r\n\r\n      if (sequenceCopyArray.length === 0) {        // when the user finished the sequence;\r\n        setRunTimer(false)\r\n        setHighestResult(sequence.length)\r\n\r\n        // if (sequence.length > highestResult) { // updating the highestResult\r\n        //   setHighestResult(sequence.length)\r\n        // }\r\n        if (sequence.length > record) { // updating the highestResult\r\n          setRecord(sequence.length)\r\n          \r\n        updateRecord(user.userName, sequence.length,level)\r\n\r\n        }\r\n\r\n        setTimeout(() => { // start new round\r\n          startRounds()\r\n        }, 1000);\r\n      }\r\n    } else {\r\n      console.log('wrong color');\r\n\r\n      // if (record > originalRecord) {\r\n      //   console.log(('נשבר שיא'));\r\n      //   updateRecord(user.userName, record)\r\n      // }\r\n\r\n      setTimer(level)\r\n      setRunTimer(false)\r\n      setgameOver('wrong color')\r\n\r\n      // setgameOver('you chose the wrong color')\r\n      // let currentResult = sequence.length - 1;\r\n      // if (currentResult > highestResult) {\r\n      //   setHighestResult(currentResult)\r\n      // }\r\n\r\n\r\n      setActiveButton(false);\r\n      setCanStartOver(true)\r\n      sequence = [];\r\n    }\r\n\r\n  }\r\n\r\n  const updateRecord = (userName, record,level) => {\r\n    fetch('/updateRecord', {\r\n      method: 'put',\r\n      body: JSON.stringify({\r\n        userName,\r\n        newRecord: record,\r\n        level\r\n      }),\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8'\r\n      }\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => { console.log(data); console.log('update') })\r\n  }\r\n\r\n  // const togglePlayWithArrows = (e) => {\r\n  //   if (e.target.checked) {\r\n  //     setArrows(true)\r\n  //     console.log('arrows');\r\n  //   } else {\r\n  //     setArrows(false)\r\n  //     console.log('mouse');\r\n  //   }\r\n  // }\r\n\r\n  // useCallback(\r\n  //   () => {\r\n  //     callback\r\n  //   },\r\n  //   [input],\r\n  // )\r\n  //   const handleArrows = (e) => {\r\n  //     console.log({arrows});\r\n  //     if( !arrows) return;\r\n  //      console.log(e.key);\r\n  //   }\r\n  //   console.log({arrows});\r\n\r\n\r\n  // console.log({activeButton});\r\n  // window.addEventListener('keydown', handleArrows);\r\n\r\n  //classNames\r\n\r\n  const startButtonClassNames = classNames(\r\n    'start',\r\n    { 'notActive': !canStartOver }\r\n  );\r\n\r\n  const blueButtonClassNames = classNames(\r\n    { 'blueFlash': activeButton && flashColor === 'blue' },\r\n    { 'button blue': activeButton && flashColor !== 'blue' },\r\n    { 'blueFlash': !activeButton && flashColor === 'blue' },\r\n    { 'button blue notActive': !activeButton && flashColor !== 'blue' },\r\n  );\r\n\r\n  const redButtonClassNames = classNames(\r\n    { 'redFlash': activeButton && flashColor === 'red' },\r\n    { 'button red': activeButton && flashColor !== 'red' },\r\n    { 'redFlash': !activeButton && flashColor === 'red' },\r\n    { 'button red notActive': !activeButton && flashColor !== 'red' },\r\n  );\r\n\r\n  const greenButtonClassNames = classNames(\r\n    { 'greenFlash': activeButton && flashColor === 'green' },\r\n    { 'button green': activeButton && flashColor !== 'green' },\r\n    { 'greenFlash': !activeButton && flashColor === 'green' },\r\n    { 'button green notActive': !activeButton && flashColor !== 'green' },\r\n  );\r\n\r\n  const yellowButtonClassNames = classNames(\r\n    { 'yellowFlash': activeButton && flashColor === 'yellow' },\r\n    { 'button yellow': activeButton && flashColor !== 'yellow' },\r\n    { 'yellowFlash': !activeButton && flashColor === 'yellow' },\r\n    { 'button yellow notActive': !activeButton && flashColor !== 'yellow' },\r\n  );\r\n  // console.log(blueButtonClassNames);\r\n  // console.log(redButtonClassNames);\r\n  // console.log(greenButtonClassNames)\r\n  // console.log(yellowButtonClassNames);\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      {\r\n        gameOver ?\r\n          <GameOver gameOverReason={gameOver} setCanStartOver={setCanStartOver} setgameOver={setgameOver} setHighestResult={setHighestResult} />\r\n          :\r\n          <div className='wrrapper'>\r\n            <h1 className='wrrapper__title'>{t('gamePage.Hello')} {user.userName}</h1>\r\n            <h3 className='wrrapper__info'>{t('gamePage.highestResult1')} {record}</h3>\r\n            <h3 className='wrrapper__info'>{t('gamePage.highestResult2')} {highestResult} </h3>\r\n\r\n            <div className='board'>\r\n              <div id='blue' className={blueButtonClassNames} onClick={handleColorBtnClick}  ></div>\r\n              <div id='yellow' className={yellowButtonClassNames} onClick={handleColorBtnClick}  ></div>\r\n              <div id='red' className={redButtonClassNames} onClick={handleColorBtnClick}  ></div>\r\n              <div id='green' className={greenButtonClassNames} onClick={handleColorBtnClick} ></div>\r\n              <div className={startButtonClassNames} onClick={handleStartGame}>\r\n                {t('gamePage.start')}\r\n                <div className='timer'>{timer}</div>\r\n              </div>\r\n            </div>\r\n\r\n            <Link to=\"/\" style={{ 'textDecoration': 'none', 'color': 'black' }}>\r\n              <button onClick={() => sequence = []} type='submit' className='backButton button'>\r\n                {t('gamePage.backBtn')}\r\n              </button>\r\n            </Link>\r\n            <RatingTable record={record} userName={user.userName} level={level} />\r\n\r\n\r\n          </div>\r\n      }\r\n      {/* <label htmlFor=\"arrow\"> play with arrows</label>\r\n      <input\r\n        type=\"checkbox\"\r\n        id=\"arrow\"\r\n        name=\"arrow\"\r\n        value=\"arrow\"\r\n        onChange={togglePlayWithArrows}\r\n        // onChange={(e)=>{(e.target.checked&&activeButton)?console.log('יאפ'):console.log('nop');}}\r\n      /> */}\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Game2\r\n\r\n// import React, { useState,useCallback,useEffect } from 'react'\r\n\r\n// function Game2() {\r\n\r\n//   const [state1, setstate1] = useState(false);\r\n\r\n//   function handleClick() {\r\n//     setstate1(!state1)\r\n//   }\r\n\r\n//   function handleCheckBox(e) {\r\n//     // e.preventDefault();\r\n//     if(e.target.checked ){\r\n//       document.addEventListener('keypress',handleKeydown);\r\n//       console.log('addEventListener');\r\n//     }else{\r\n//       document.removeEventListener('keypress',handleKeydown);\r\n//       console.log('removeEventListener');\r\n//     }\r\n//   }\r\n\r\n\r\n//   const handleKeydown = useCallback( (e) => {\r\n//     e.preventDefault();\r\n//     console.log(state1);\r\n//     if(state1){\r\n//       console.log(e.key);\r\n//     }else{\r\n//       console.log('state false');\r\n//     }\r\n//   },[])\r\n\r\n//   const [timer, setTimer] = useState(10)\r\n\r\n//   useEffect(() => {\r\n//     if(timer<=0){console.log('time`s up'); return};\r\n//     const id = setInterval(() => {\r\n//       setTimer(timer-1) \r\n//     }, 1000);\r\n//     return () => {\r\n//       clearInterval(id);\r\n//     };\r\n//   }, [timer])\r\n\r\n//   function change(e){\r\n//     console.log(e.target.value);\r\n\r\n//   }\r\n\r\n//   function click(e) {\r\n//     setTimer(10)\r\n//   }\r\n\r\n\r\n//   return (\r\n//     <>\r\n//       <button onClick={click}>timer</button>\r\n//       <input type='string' onChange={change}></input>\r\n//       <div>{timer}</div>;\r\n\r\n//       <button onClick={handleClick}>toggle state</button>\r\n//       <button onClick={handleKeydown}>handleKeydown</button>\r\n//       <h1>{state1?'true':'false'}</h1>\r\n//       {/* {console.log(state)} */}\r\n\r\n//       <label htmlFor=\"arrow\"> add keydown listener</label>\r\n//      <input\r\n//          type=\"checkbox\"\r\n//          id=\"arrow\"\r\n//          name=\"arrow\"\r\n//          value=\"arrow\"\r\n//          onChange={handleCheckBox}\r\n//       />\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default Game2\r\n\r\n","import React, { useState, useEffect } from 'react';\r\n// import './Settings.scss';\r\nimport {\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction Settings({ setUserName, setLanguage, setLevel, setUser }) {\r\n  // user, setUser, selectedOption, setSelectedOption, loginUser\r\n  const { t, i18n } = useTranslation();\r\n  const history = useHistory();\r\n  const [error, setError] = useState(false)\r\n\r\n\r\n\r\n  const changLang = (lang) => {\r\n    i18n.changeLanguage(lang)\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let userName = e.target.children.userName.value;\r\n    let password = e.target.children.password.value;\r\n    console.log(password);\r\n    document.cookie = `userName=${userName}`;\r\n    getUserDetailsOrCreateNewUser(userName, password);\r\n\r\n    // history.push(\"/simon\");\r\n  }\r\n\r\n\r\n\r\n  const getUserDetailsOrCreateNewUser = async (userName, password) => {\r\n\r\n    await fetch('/validatUserName', {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({ userName, password })\r\n    })\r\n      .then(response => response.json())\r\n      .then((data) => {\r\n        console.log({ data });\r\n        if (data.userData) {\r\n          setUser(data.userData);\r\n          console.log('user set');\r\n          history.push(\"/simon\");\r\n        } else { setError(true) }\r\n\r\n\r\n        // setRecord(data.userData.record1)\r\n        // originalRecord = data.userData.record1;\r\n      });\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <div className='settingsForm'>\r\n      <form onSubmit={handleSubmit}>\r\n\r\n        <h1 className='settingsForm__title'>{t('settingPage.title')}</h1>\r\n\r\n        {/* <div className='settingsForm__login'> */}\r\n        <h3 className='loginSection__description'>{t('settingPage.playAs')}</h3>\r\n        <input className='loginSection__input'\r\n          type='text'\r\n          placeholder={t('settingPage.placeholder')}\r\n          name='userName'\r\n          required\r\n        />\r\n        <input className='loginSection__input'\r\n          type='password'\r\n          placeholder={t('settingPage.placeholder2')}\r\n          name='password'\r\n          required\r\n        />\r\n        <p className='loginSection__errMesagge'>\r\n          {error ? t('settingPage.loginError') : null}\r\n        </p>\r\n\r\n\r\n        <div className='settingsForm__radio'>\r\n\r\n          <div className='lang'>\r\n            <h3>{t('settingPage.lang')}</h3>\r\n            <label htmlFor=\"English\">{t('settingPage.English')}\r\n            <input\r\n              type=\"radio\"\r\n              name='language'\r\n              value='English'\r\n              id='English'\r\n              // checked={true}\r\n              onChange={() => changLang('en')}\r\n            />\r\n            </label>\r\n            <label htmlFor=\"Hebrew\">{t('settingPage.Hebrew')}\r\n            <input\r\n              type=\"radio\"\r\n              name=\"language\"\r\n              value='Hebrew'\r\n              id=\"Hebrew\"\r\n              onChange={() => changLang('hi')}\r\n            />\r\n            </label>\r\n          </div>\r\n\r\n          <div className='level'>\r\n            <h3>{t('settingPage.difficultyLevel')}</h3>\r\n\r\n            <div className='level__btns'>\r\n              <div >\r\n                <label>\r\n                  <input\r\n                    value='easy'\r\n                    name='Difficulty'\r\n                    type=\"radio\"\r\n                    required\r\n                    checked={true}\r\n                    onChange={() => setLevel(15)}\r\n                  />\r\n\r\n                  {t('settingPage.easy')}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"radio\">\r\n                <label>\r\n                  <input\r\n                    name='Difficulty'\r\n                    type=\"radio\"\r\n                    value=\"medium\"\r\n                    onChange={() => setLevel(10)}\r\n                  />\r\n\r\n                  {t('settingPage.medium')}\r\n                </label>\r\n              </div>\r\n\r\n              <div className=\"radio\">\r\n                <label>\r\n                  <input\r\n                    name='Difficulty'\r\n                    type=\"radio\"\r\n                    value=\"hard\"\r\n                    onChange={() => setLevel(5)}\r\n                  />\r\n\r\n                  {t('settingPage.Hard')}\r\n                </label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <button type='submit'className='button'>{t('settingPage.play')}</button>\r\n\r\n      </form>\r\n      <img src='../../../../../logo1.png' alt='simonImg'></img>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Settings;\r\n","import React, {  useState } from \"react\";\n// import './App.scss';\nimport './style/main.scss';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\n// components\nimport Game from './view/components/Game/Game'\nimport Game2 from './view/components/Game2/Game2'\nimport Settings from './view/components/Settings/Settings'\n\n\n\nfunction App() {\n\n\n  const [userName,setUserName] = useState('');\n  const [user,setUser] = useState({});\n  const [language,setLanguage] = useState('English');\n  const [level,setLevel] = useState(15);\n  const [counter,setCounter] = useState(0);\n\n  return (\n\n    // <div className=\"App\">\n    //     <Counter setCounter={setCounter} counter={counter}/>\n    //     <Counter2  counter={counter}/>\n    // </div>\n\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <Route path=\"/simon\">\n            <Game2 user={user} level={level} setUser={setUser}/>\n            {/* <Game states={{user,userName,language,level,setUserName,setLanguage,setLevel}} level={level} setLevel={setLevel} /> */}\n          </Route>\n          <Route path=\"/\">\n            <Settings setUserName={setUserName} setLanguage={setLanguage} setLevel={setLevel} setUser={setUser}/>\n          </Route>\n        </Switch>\n     </Router>\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n// הזמנים שיהיו נכונים בכל מצב דילאי\n//  הגדרות שמאפשרות לשלוט בטיימר,בשפה ואולי גם אם יהיה משחק קשיח או לא\n//חיבורלדטאבייס,חיבור עם שם משתמש ושמירת השיא\n//סידור הקודד,שמות קריאים\n//טיימר למהלא ביוז סטייט\n\n//איךאפשרלעשות כמהיוזסטיטים לclassName","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\r\nimport { initReactI18next } from 'react-i18next';\r\n\r\nimport Backend from 'i18next-http-backend';\r\nimport LanguageDetector from 'i18next-browser-languagedetector';\r\n// don't want to use this?\r\n// have a look at the Quick start guide \r\n// for passing in lng and translations on init\r\n\r\nconst Languages = ['en', 'hi'];\r\n\r\ni18n\r\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\r\n  // learn more: https://github.com/i18next/i18next-http-backend\r\n  .use(Backend)\r\n  // detect user language\r\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\r\n  .use(LanguageDetector)\r\n  // pass the i18n instance to react-i18next.\r\n  .use(initReactI18next)\r\n  // init i18next\r\n  // for all options read: https://www.i18next.com/overview/configuration-options\r\n  .init({\r\n    fallbackLng: 'en',\r\n    debug: true,\r\n    whitelist: Languages,\r\n\r\n    interpolation: {\r\n      escapeValue: false, // not needed for react as it escapes by default\r\n    }\r\n  });\r\n\r\n\r\nexport default i18n;","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport './i18next'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback={(<div>loading~~~</div>)}>\n      <App />\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}